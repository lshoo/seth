package org.ethereum.seth.evm

import org.ethereum.seth.evm.instructions._
//
//object InMemoryInterpreter extends (Instruction ~> Id) {
//
//  def apply[A](i: Instruction[A]): Id[A] = i match {
//    case STOP => {}
//    case ADD(left, right) =>
//    case MUL(leftA, rightA) =>
//    case SUB(leftA, rightA) =>
//    case DIV(leftA, rightA) =>
//    case SDIV(leftA, rightA) =>
//    case MOD(leftA, rightA) =>
//    case SMOD(leftA, rightA) =>
//    case ADDMOD(leftA, rightA, modInt) =>
//    case MULMOD(leftA, rightA, modInt) =>
//    case EXP(vA, xA) =>
//    case SIGNEXTEND(c1A, c2A) =>
//    case LT(leftA, rightA) =>
//    case SLT(leftA, rightA) =>
//    case GT(leftA, rightA) =>
//    case SGT(leftA, rightA) =>
//    case EQ(leftA, rightA) =>
//    case ISZERO(valueA) =>
//    case AND(leftA, rightA) =>
//    case OR(leftA, rightA) =>
//    case XOR(leftA, rightA) =>
//    case NOT(valueA) =>
//    case BYTE(zeroA, oneA) =>
//    case SHA3(valueA) =>
//    case ADDRESS =>
//    case BALANCE(accountA) =>
//    case ORIGIN =>
//    case CALLER =>
//    case CALLVALUE =>
//    case CALLDATALOAD(valueA) =>
//    case CALLDATASIZE =>
//    case CALLDATACOPY(value1A, originalA, value2A) =>
//    case CODESIZE =>
//    case CODECOPY(value1A, originalA, value2A) =>
//    case GASPRICE =>
//    case EXTCODESIZE(value1A) =>
//    case EXTCODECOPY(value1A, originalA, value2A, extA) =>
//    case BLOCKHASH(valueA) =>
//    case COINBASE =>
//    case TIMESTAMP =>
//    case NUMBER =>
//    case DIFFICULTY =>
//    case GASLIMIT =>
//    case POP(valueA) =>
//    case MLOAD(valueA) =>
//    case MSTORE(valueA) =>
//    case MSTORES(valueA) =>
//    case SLOAD(valueA) =>
//    case SSTORE(valueA, value2A) =>
//    case JUMP(valueA) =>
//    case JUMPI(valueA, value2A) =>
//    case PC =>
//    case MSIZE =>
//    case GAS =>
//    case JUMPDEST =>
//    case PUSH1 =>
//    case PUSH2 =>
//    case PUSH3 =>
//    case PUSH4 =>
//    case PUSH5 =>
//    case PUSH6 =>
//    case PUSH7 =>
//    case PUSH8 =>
//    case PUSH9 =>
//    case PUSH10 =>
//    case PUSH11 =>
//    case PUSH12 =>
//    case PUSH13 =>
//    case PUSH14 =>
//    case PUSH15 =>
//    case PUSH16 =>
//    case PUSH17 =>
//    case PUSH18 =>
//    case PUSH19 =>
//    case PUSH20 =>
//    case PUSH21 =>
//    case PUSH22 =>
//    case PUSH23 =>
//    case PUSH24 =>
//    case PUSH25 =>
//    case PUSH26 =>
//    case PUSH27 =>
//    case PUSH28 =>
//    case PUSH29 =>
//    case PUSH30 =>
//    case PUSH31 =>
//    case PUSH32 =>
//    case DUP1(value) =>
//    case DUP2(value) =>
//    case DUP3(value) =>
//    case DUP4(value) =>
//    case DUP5(value) =>
//    case DUP6(value) =>
//    case DUP7(value) =>
//    case DUP8(value) =>
//    case DUP9(value) =>
//    case DUP10(value) =>
//    case DUP11(value) =>
//    case DUP12(value) =>
//    case DUP13(value) =>
//    case DUP14(value) =>
//    case DUP15(value) =>
//    case DUP16(value) =>
//    case SWAP1(value) =>
//    case SWAP2(value) =>
//    case SWAP3(value) =>
//    case SWAP4(value) =>
//    case SWAP5(value) =>
//    case SWAP6(value) =>
//    case SWAP7(value) =>
//    case SWAP8(value) =>
//    case SWAP9(value) =>
//    case SWAP10(value) =>
//    case SWAP11(value) =>
//    case SWAP12(value) =>
//    case SWAP13(value) =>
//    case SWAP14(value) =>
//    case SWAP15(value) =>
//    case SWAP16(value) =>
//    case LOG0(value) =>
//    case LOG1(value) =>
//    case LOG2(value) =>
//    case LOG3(value) =>
//    case LOG4(value) =>
//    case CREATE(value) =>
//    case CALL(value) =>
//    case CALLCODE(value) =>
//    case RETURN(value) =>
//    case DELEGATECALL(value) =>
//    case SUICIDE(accountA) =>
//  }

//}
